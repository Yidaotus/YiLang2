import { Box, Spinner, useBreakpointValue } from "@chakra-ui/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback, useEffect, useState } from "react";
import DesktopSideBar from "./SideBar/DesktopSideBar";
import MobileSideBar from "./SideBar/MobileSideBar";

type LayoutProps = {
	children: React.ReactNode;
};
const Layout = ({ children }: LayoutProps) => {
	const router = useRouter();
	const [isLoading, setIsLoading] = useState(false);
	const routerChangeStart = useCallback(() => {
		setIsLoading(true);
	}, []);

	const routerChangeFinish = useCallback(() => {
		setIsLoading(false);
	}, []);

	useEffect(() => {
		router.events.on("routeChangeStart", routerChangeStart);
		router.events.on("routeChangeComplete", routerChangeFinish);
		return () => {
			router.events.off("routeChangeStart", routerChangeStart);
			router.events.off("routeChangeComplete", routerChangeFinish);
		};
	});

	const isMobile = useBreakpointValue(
		{
			base: true,
			md: false,
		},
		{
			fallback: "md",
		}
	);

	return (
		<>
			<Head>
				<title>YiLang 2.0</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Box as="main" display="flex" overflow="hidden" pos="relative">
				{isMobile && <MobileSideBar />}
				{!isMobile && <DesktopSideBar />}
				<Box w="100%" h="100vh" overflow="auto" maxH="100vh">
					{isLoading && (
						<Box
							w="100%"
							h="100%"
							bg="rgba(0,0,0,0.4)"
							display="flex"
							alignItems="center"
							justifyContent="center"
							pos="absolute"
							top="0"
							zIndex={50}
						>
							<Spinner color="brand.500" w="150px" h="150px" />
						</Box>
					)}
					{children}
				</Box>
			</Box>
		</>
	);
};

export default Layout;
